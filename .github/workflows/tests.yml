name: Tests

on:
  push:
    branches: [ "main" ]
    paths-ignore: 
      - "papers/**"
      - "doc/**"
      - "README.md"
  pull_request:
    branches: [ "main" ]
    paths-ignore: 
      - "papers/**"
      - "doc/**"
      - "README.md"

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        compiler: [clang, gcc]
        build_type: [Asan, Tsan, Release]
        exclude:
          - compiler: gcc
            build_type: Tsan
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Clang
      if: ${{ matrix.compiler == 'clang' }}
      uses: egor-tensin/setup-clang@v1.4

    - name: Install GCC
      if: ${{ matrix.compiler == 'gcc' }}
      uses: egor-tensin/setup-gcc@v1.3
      with:
        version: 11

    - name: Setup Ninja
      uses: ashutoshvarma/setup-ninja@v1.1

    - name: Restore Cache
      uses: actions/cache/restore@v3
      with:
        path: ${{ github.workspace }}/build-${{ matrix.build_type }}
        key: ${{ github.job }}-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build-${{ matrix.build_type }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DPORTABLE=1 -GNinja

    - name: Build
      run: cmake --build ${{ github.workspace }}/build-${{ matrix.build_type }} --target src/all

    - name: Save Cache
      uses: actions/cache/save@v3
      if: always()
      with:
        path: ${{github.workspace}}/build-${{ matrix.build_type }}
        key: ${{ github.job }}-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}

    - name: Test
      working-directory: ${{github.workspace}}/build-${{ matrix.build_type }}
      run: TSAN_OPTIONS=report_atomic_races=0 ctest --output-on-failure
