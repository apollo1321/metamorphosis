name: Run tests

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "papers/**"
      - "doc/**"
      - "README.md"
      - ".github/workflows/latex.yml"
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - "papers/**"
      - "doc/**"
      - "README.md"
      - ".github/workflows/latex.yml"

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        build_type: [Asan, Tsan, Release]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Nix
      uses: cachix/install-nix-action@v20

    - name: Restore Build
      uses: actions/cache/restore@v3
      with:
        path: ${{ github.workspace }}/build
        key: build-${{ matrix.build_type }}

    - name: Configure CMake
      run: nix develop -i --command cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -GNinja

    - name: Build
      run: nix develop -i --command cmake --build build --target src/all

    - name: Save Build
      uses: actions/cache/save@v3
      if: always()
      with:
        path: ${{ github.workspace }}/build
        key: build-${{ matrix.build_type }}

    - name: Run Tests
      run: TSAN_OPTIONS=report_atomic_races=0 nix develop -i -k TSAN_OPTIONS --command ctest --test-dir build/src --output-on-failure

  fuzz_test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        build_type: [Asan, Release]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Nix
      uses: cachix/install-nix-action@v20

    - name: Restore Build
      uses: actions/cache/restore@v3
      with:
        path: ${{ github.workspace }}/build
        key: build-fuzz-${{ matrix.build_type }}

    - name: Configure CMake
      run: nix develop -i --command cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DMORF_FUZZ_TEST=ON -GNinja

    - name: Build
      run: nix develop -i --command cmake --build build --target ceq_test_raft_fuzztest

    - name: Save Build
      uses: actions/cache/save@v3
      if: always()
      with:
        path: ${{ github.workspace }}/build
        key: build-fuzz-${{ matrix.build_type }}

    - name: Run Asan Fuzz Tests
      if: ${{ matrix.build_type == 'Asan' }}
      run: nix develop -i --command ./build/src/raft/test/simulation_test/ceq_test_raft_fuzztest --fuzz_for 20s --fuzz=RaftFuzzTest.RaftTestWrapper

    - name: Run Release Fuzz Tests
      if: ${{ matrix.build_type == 'Release' }}
      run: nix develop -i --command ./build/src/raft/test/simulation_test/ceq_test_raft_fuzztest --fuzz_for 100s --fuzz=RaftFuzzTest.RaftTestWrapper

  system_test:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Nix
      uses: cachix/install-nix-action@v20

    - name: Start system test
      run: nix develop \#systest -i --command python3 src/raft/test/system_test/system_test.py
